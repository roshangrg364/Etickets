@model ETicketing.ViewModels.Actor.ActorUpdateViewModel

@{
    ViewData["Title"] = "Update Actor";
}

<div class="row text">
     <div class="card col-md-8 offset-2">

      <div class="col-md-12">
            <div class="card-header">
                <h4>@ViewData["Title"] </h4>
            </div>
        <div class="row">
            <div class="col-md-12">
                <form id="updateForm" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="Id" hidden />
                    <div class="form-group text-center">
                        <img id="ProfilePicturePreview" src="~/images/uploads/@Model.ImageSource" onerror="this.onerror=null;this.src='/images/empty-profile.png';" class="border-info rounded-circle" style="width: 200px;height:200px" />
                    </div>
                    <div class="form-group mt-2">
                        <label  class="control-label">Profile Image</label>
                         <input asp-for="Image" class="form-control" accept="image/*" type="file" id="file" >
                    </div>
                    <div class="form-group  mt-2">
                        <label  class="control-label"> Full Name</label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group  mt-2">
                        <label  class="control-label">Description</label>
                        <textarea asp-for="Description" rows=5 class="form-control" ></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="card-footer text-muted  mt-2">
                       <button type="submit"  class="btn btn-outline-success float-right"><i class="bi bi-check-circle-fill"></i> Update</button>
                        <a class="btn btn-outline-secondary" asp-action="Index"><i class="bi bi-arrow-left-circle-fill"></i> Back</a>
                 
                    </div>
                </form>
            </div>
        </div>
    </div>
    </div>
</div>

@section Scripts{ 
    <script>
         const fileElm =  document.getElementById("file");
       const form = document.getElementById("updateForm");
        file.addEventListener("change",function () {         
            readURL(this);
        });
         function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ProfilePicturePreview').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }



         const udpateActor = async function(){
         try
         {
                 const url = "/api/actors/"+ $("#Id").val();
                let formData = new FormData();
                 formData.append("Name",$("#Name").val());
                 formData.append("Description",$("#Description").val());
                 formData.append("Image",file.files[0]);

                 const options ={
                           method: "put",
                          body:formData
                     };

                  const response = await fetch(url,options);
                   if(!response.ok)
                   {
                         throw new Error(await response.text());
                   }
                  return await response.json();
                 }
             catch(error)
             {
              throw error;
             }
         }


     form.addEventListener("submit",async(e)=>{
         e.preventDefault();
         try
         {
                const data = await  udpateActor();

                   Swal.fire({
                        title: 'Success!',
                        text: data,
                        icon: 'success',
                        showConfirmButton: true 
                        });

                        setInterval(()=>{
                            window.location.href ="/Actor/Index";
                        },1500);
                 }
                catch(error)
                {
                       Swal.fire({
                         title: 'Error!',
                         text: error,
                         icon: 'error',
                         showConfirmButton: true
                         });
                 }

     })

    </script>
}